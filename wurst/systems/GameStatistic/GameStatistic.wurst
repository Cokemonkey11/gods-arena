// package GameStatistic
// import FrameMultiboard
// import FrameMultiboardButton
// import CustomStatSystem
// import TimerUtils
// import PlayerData
// import HashMap

// FrameMultiboard mboardMain
// public ToggleMultiboardButton toggleMultiboardButton

// FrameMultiboard mboardStats
// public ToggleMultiboardButton toggleStatMultiboardButton

// public function initMultiboard()
//   mboardMain = new FrameMultiboard(FRAMEPOINT_TOP, vec2(0.4, 0.53))
//   ..setColumnCount(10)
//   ..setRowCount(1)
//   ..setPadding(vec2(0.01, 0.01))

//   mboardMain.setItemValue(0, 0, "Player")
//   mboardMain.setItemValue(0, 1, "Kills")
//   mboardMain.setItemValue(0, 2, "Deaths")
//   mboardMain.setItemValue(0, 3, "Phys.D.")
//   mboardMain.setItemValue(0, 4, "Spell D.")
//   mboardMain.setItemValue(0, 5, "D. Taken")
//   mboardMain.setItemValue(0, 6, "Full Phys. D.")
//   mboardMain.setItemValue(0, 7, "Spell D.")
//   mboardMain.setItemValue(0, 8, "D. Taken")
//   mboardMain.setItemValue(0, 9, "Points")

//   toggleMultiboardButton = new ToggleMultiboardButton(mboardMain, "Game Stats (G)")
//   ..setSize(0.12, 0.032)
//   ..setPoint(FRAMEPOINT_BOTTOM, vec2(0.46, 0.138))

//   pData.forEach() (player p, PlayerData value) ->
//     toggleMultiboardButton
//     ..addHotkeyForPlayer(p, OSKEY_G)

//   mboardStats = new FrameMultiboard(FRAMEPOINT_TOP, vec2(0.4, 0.53))
//   ..setColumnCount(12)
//   ..setRowCount(1)
//   ..setPadding(vec2(0.01, 0.01))
//   ..setItemsSize(0.08, 0.018)

//   mboardStats.setItemValue(0, 0, "Player")
//   mboardStats.setItemValue(0, 1, "BAD")
//   mboardStats.setItemValue(0, 2, "AP")
//   mboardStats.setItemValue(0, 3, "ACP")
//   mboardStats.setItemValue(0, 4, "ACC")
//   mboardStats.setItemValue(0, 5, "L")
//   mboardStats.setItemValue(0, 6, "E")
//   mboardStats.setItemValue(0, 7, "BSD")
//   mboardStats.setItemValue(0, 8, "SP")
//   mboardStats.setItemValue(0, 9, "SCP")
//   mboardStats.setItemValue(0, 10, "SCC")
//   mboardStats.setItemValue(0, 11, "SL")

//   toggleStatMultiboardButton = new ToggleMultiboardButton(mboardStats, "Hero Stats (Y)")
//   ..setSize(0.12, 0.032)
//   ..setPoint(FRAMEPOINT_BOTTOM, vec2(0.358, 0.138))

//   pData.forEach() (player p, PlayerData value) ->
//     toggleStatMultiboardButton
//     ..addHotkeyForPlayer(p, OSKEY_Y)

//   update()
//   getTimer().startPeriodic(1, () -> update())

// function update()
//   mboardMain
//   ..setRowCount(pData.size()+1)
//   ..setItemsSize(0.06, 0.018)
//   ..setColumnWidth(0, 0.07)

//   mboardStats
//   ..setRowCount(pData.size()+1)
//   ..setItemsSize(0.06, 0.018)
//   ..setColumnWidth(0, 0.07)

//   var i = 1
//   for p in pData
//     let playerData = pData.get(p)

//     mboardMain.setItemValue(i, 0, p.getNameColored())
//     mboardMain.setItemValue(i, 1, playerData.getKills().toString())
//     mboardMain.setColumnWidth(1, 0.04)
//     mboardMain.setItemValue(i, 2, playerData.getDeaths().toString())
//     mboardMain.setColumnWidth(2, 0.04)
//     mboardMain.setItemValue(i, 3, playerData.getPhysDamage().toString())
//     mboardMain.setItemValue(i, 4, playerData.getSpellDamage().toString())
//     mboardMain.setItemValue(i, 5, playerData.getDamageTaken().toString())
//     mboardMain.setItemValue(i, 6, playerData.getOverallPhysDamage().toString())
//     mboardMain.setItemValue(i, 7, playerData.getOverallSpellDamage().toString())
//     mboardMain.setItemValue(i, 8, playerData.getOverallDamageTaken().toString())
//     mboardMain.setItemValue(i, 9, playerData.getArenaPoints().toString())

//     playerData.getHero().ifPresent() (h) ->
//       mboardStats.setItemValue(i, 0, p.getNameColored())
//       mboardStats.setItemValue(i, 1, h.actor.getStat(CustomUnitStats.BONUS_ATTACK_DAMAGE).toString())
//       mboardStats.setItemValue(i, 2, h.actor.getStat(CustomUnitStats.ATTACK_POWER).toString())
//       mboardStats.setItemValue(i, 3, h.actor.getStat(CustomUnitStats.ATTACK_CRIT_POWER).toString())
//       mboardStats.setItemValue(i, 4, h.actor.getStat(CustomUnitStats.ATTACK_CRIT_CHANCE).toString())
//       mboardStats.setItemValue(i, 5, h.actor.getStat(CustomUnitStats.LIFESTEAL).toString())
//       mboardStats.setItemValue(i, 6, h.actor.getStat(CustomUnitStats.EVASION).toString())
//       mboardStats.setItemValue(i, 7, h.actor.getStat(CustomUnitStats.BONUS_SPELL_DAMAGE).toString())
//       mboardStats.setItemValue(i, 8, h.actor.getStat(CustomUnitStats.SPELL_POWER).toString())
//       mboardStats.setItemValue(i, 9, h.actor.getStat(CustomUnitStats.SPELL_CRIT_POWER).toString())
//       mboardStats.setItemValue(i, 10, h.actor.getStat(CustomUnitStats.SPELL_CRIT_CHANCE).toString())
//       mboardStats.setItemValue(i, 11, h.actor.getStat(CustomUnitStats.SPELL_LIFESTEAL).toString())
    
//     i++
