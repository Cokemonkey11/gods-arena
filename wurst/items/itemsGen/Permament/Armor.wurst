package Armor
import Icons
import BonusHandler
import RecipeItem
import ItemRecipe

public constant VITALITY_STONE_ITEM = compiletime(new RecipeItem()
..setName("Vitality Stone")
..setInterfaceIcon(Icons.bTNPeriapt)
..setGoldCost(90)
..setTooltipBasic("Purchase Vitality Stone")
..addBonus(Bonus.LIFE, 150)
..generateTooltip("")
)..register()

public constant RING_OF_PROTECTION_ITEM = compiletime(new RecipeItem()
..setName("Ring of Protection")
..setInterfaceIcon(Icons.bTNRingGreen)
..setGoldCost(60)
..setTooltipBasic("Purchase Ring of Protection")
..addBonus(Bonus.ARMOR, 2)
..generateTooltip("")
)..register()

constant SIMPLE_ARMOR_ITEM = compiletime(new RecipeItem()
..setName("Simple Armor")
..setInterfaceIcon(Icons.bTNLeatherUpgradeTwo)
..addBonus(Bonus.LIFE, 200)
..addBonus(Bonus.ARMOR, 3)
..generateTooltip("")
)..register()
public constant SIMPLE_ARMOR_RECIPE = compiletime(new RecipeItem()
..setName("Simple Armor Recipe")
..setInterfaceIcon(Icons.bTNLeatherUpgradeTwo)
..setGoldCost(50)
..setTooltipBasic("Purchase Simple Armor Recipe")
..setTooltipExtended("200 hp\n3 armor.\nRequires:\n-Vitality Stone\n-Ring of Protection")
)..register()
constant SIMPLE_ARMOR_RECIPE_ITEM = new ItemRecipe()
..setRequiredItems(VITALITY_STONE_ITEM.getNewId(), RING_OF_PROTECTION_ITEM.getNewId(), SIMPLE_ARMOR_RECIPE.getNewId())
..setResultItem(SIMPLE_ARMOR_ITEM.getNewId())

public constant RING_OF_REGENERATION_ITEM = compiletime(new RecipeItem()
..setName("Ring of Regeneration")
..setInterfaceIcon(Icons.bTNRingSkull)
..setGoldCost(75)
..setTooltipBasic("Purchase Ring of Regeneration")
..addBonus(Bonus.LIFEREGEN, 2)
..generateTooltip("")
)..register()

public constant SPIRIT_MASK_ITEM = compiletime(new RecipeItem()
..setName("Spirit Mask")
..setInterfaceIcon(Icons.bTNSobiMask)
..setGoldCost(80)
..setTooltipBasic("Purchase Spirit Mask")
..addBonus(Bonus.MANAREGEN, 0.5)
..generateTooltip("")
)..register()

public constant PENDANT_OF_MANA_ITEM = compiletime(new RecipeItem()
..setName("Pendant of Mana")
..setInterfaceIcon(Icons.bTNPendantOfMana)
..setGoldCost(75)
..setTooltipBasic("Purchase Pendant of Mana")
..addBonus(Bonus.MANA, 175)
..generateTooltip("")
)..register()

constant ROBE_OF_THE_MAGE_ITEM = compiletime(new RecipeItem()
..setName("Robe of the Mage")
..setInterfaceIcon(Icons.bTNRobeOfTheMagi)
..setTooltipBasic("Purchase Robe of the Mage")
..addBonus(Bonus.MANA, 200)
..addBonus(Bonus.MANAREGEN, 1)
..generateTooltip("")
)..register()
public constant ROBE_OF_THE_MAGE_RECIPE = compiletime(new RecipeItem()
..setName("Robe of the Mage Recipe")
..setInterfaceIcon(Icons.bTNRobeOfTheMagi)
..setGoldCost(90)
..setTooltipBasic("Purchase Robe of the Mage Recipe")
..setTooltipExtended("200 mana\n1 mp/reg.\nRequires:\n-Pendant of Mana\n-Spirit Mask")
)..register()
constant ROBE_OF_THE_MAGE_RECIPE_ITEM = new ItemRecipe()
..setRequiredItems(PENDANT_OF_MANA_ITEM.getNewId(), SPIRIT_MASK_ITEM.getNewId(), ROBE_OF_THE_MAGE_RECIPE.getNewId())
..setResultItem(ROBE_OF_THE_MAGE_ITEM.getNewId())

public constant HEALTH_AMULET_ITEM = compiletime(new RecipeItem()
..setName("Health Amulet")
..setInterfaceIcon(Icons.bTNSpellShieldAmulet)
..setGoldCost(125)
..setTooltipBasic("Purchase Health Amulet")
..addBonus(Bonus.LIFE, 250)
..generateTooltip("")
)..register()

constant ADVANCED_ARMOR_ITEM = compiletime(new RecipeItem()
..setName("Advanced Armor")
..setInterfaceIcon(Icons.bTNMoonArmor)
..setTooltipBasic("Purchase Advanced Armor")
..addBonus(Bonus.LIFE, 500)
..addBonus(Bonus.LIFEREGEN, 3)
..addBonus(Bonus.ARMOR, 4)
..generateTooltip("")
)..register()
public constant ADVANCED_ARMOR_RECIPE = compiletime(new RecipeItem()
..setName("Advanced Armor Recipe")
..setGoldCost(250)
..setInterfaceIcon(Icons.bTNMoonArmor)
..setTooltipBasic("Purchase Advanced Armor Recipe")
..setTooltipExtended("500 hp\n3 hp/reg\n4 armor.\nRequires:\n-Simple Armor\n-Ring of Regeneration")
)..register()
constant ADVANCED_ARMOR_RECIPE_ITEM = new ItemRecipe()
..setRequiredItems(RING_OF_REGENERATION_ITEM.getNewId(), SIMPLE_ARMOR_ITEM.getNewId(), ADVANCED_ARMOR_RECIPE.getNewId())
..setResultItem(ADVANCED_ARMOR_ITEM.getNewId())