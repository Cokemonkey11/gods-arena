package Weapons
import Icons
import RecipeItem

public constant GLOVES_OF_HASTE_ITEM = compiletime(new RecipeItem()
..setName("Gloves of Haste")
..setInterfaceIcon(Icons.bTNGlove)
..setGoldCost(90)
..addBonus(Bonus.ATTACKSPEED, 15)
..generateTooltip("")
)..register()

public constant CLAWS_OF_ATTACK_ITEM = compiletime(new RecipeItem()
..setName("Claws of Attack")
..setInterfaceIcon(Icons.bTNClawsOfAttack)
..setGoldCost(80)
..generateTooltip("")
)..register()

public constant IRON_SWORD_ITEM = compiletime(new RecipeItem()
..setName("Iron Sword")
..setInterfaceIcon(Icons.bTNSteelMelee)
..setGoldCost(110)
..addBonus(Bonus.DAMAGE, 14)
..generateTooltip("")
)..register()

// constant STEEL_SWORD_ABIL_ID = compiletime(ABIL_ID_GEN.next())
// @compiletime function steelSwordAbil()
//   new AbilityDefinitionCriticalStrikecreep(STEEL_SWORD_ABIL_ID)
//   ..setChancetoCriticalStrike(1, 20)
//   ..setDamageMultiplier(1, 1.5)
// constant STEEL_SWORD_ITEM = compiletime(new RecipeItem()
// ..setName("Steel Sword")
// ..setInterfaceIcon(Icons.bTNThoriumMelee)
// ..setTooltipBasic("Purchase Steel Sword")
// ..addBonus(Bonus.DAMAGE, 30)
// ..generateTooltip("")
// ..setAbilities(STEEL_SWORD_ABIL_ID.toRawCode())
// )..register()
// public constant STEEL_SWORD_RECIPE = compiletime(new RecipeItem()
// ..setName("Steel Sword Recipe")
// ..setInterfaceIcon(Icons.bTNShamanMaster)
// ..setGoldCost(70)
// ..setTooltipBasic("Purchase Steel Sword Recipe")
// ..setTooltipExtended("30 damage.\nRequires:\n-Steel Sword\n-Claws of Attack")
// )..register()
// constant STEEL_SWORD_RECIPE_ITEM = new ItemRecipe()
// ..setRequiredItems(GLOVES_OF_HASTE_ITEM.getNewId(), CLAWS_OF_ATTACK_ITEM.getNewId(), CLAWS_OF_ATTACK_ITEM.getNewId(), SHAMAN_CLAWS_RECIPE.getNewId())
// ..setResultItem(STEEL_SWORD_ITEM.getNewId())

// public constant ARCANITE_SWORD_ITEM = compiletime(new RecipeItem()
// ..setName("Iron Sword")
// ..setInterfaceIcon(Icons.bTNArcaniteMelee)
// ..setGoldCost(110)
// ..setTooltipBasic("Purchase Iron Sword")
// ..addBonus(Bonus.DAMAGE, 14)
// ..generateTooltip("")
// ..setAbilities(STEEL_SWORD_ABIL_ID.toRawCode())
// )..register()

constant SHAMAN_CLAWS_ITEM = compiletime(new RecipeItem()
..setName("Shaman Claws")
..setInterfaceIcon(Icons.bTNShamanMaster)
..addBonus(Bonus.DAMAGE, 20)
..addBonus(Bonus.ATTACKSPEED, 20)
..generateTooltip("")
)..register()
public constant SHAMAN_CLAWS_RECIPE= new ItemRecipe()
..setRequiredItems(GLOVES_OF_HASTE_ITEM.getNewId(), CLAWS_OF_ATTACK_ITEM.getNewId(), CLAWS_OF_ATTACK_ITEM.getNewId())
..setResultItem(SHAMAN_CLAWS_ITEM.getNewId(), SHAMAN_CLAWS_ITEM.bonusList)

public constant RING_OF_AGILITY_ITEM = compiletime(new RecipeItem()
..setName("Ring of Agility")
..setInterfaceIcon(Icons.bTNRingJadeFalcon)
..setGoldCost(80)
..addBonus(Bonus.AGILITY, 8)
..generateTooltip("")
)..register()

constant ASSASINS_BLADE_ITEM = compiletime(new RecipeItem()
..setName("Assasin's Blade")
..setInterfaceIcon(Icons.bTNDaggerOfEscape)
..addBonus(Bonus.DAMAGE, 20)
..addBonus(Bonus.AGILITY, 12)
..generateTooltip("")
)..register()
public constant ASSASINS_BLADE_RECIPE = new ItemRecipe()
..gold(90)
..setRequiredItems(IRON_SWORD_ITEM.getNewId(), RING_OF_AGILITY_ITEM.getNewId())
..setResultItem(ASSASINS_BLADE_ITEM.getNewId(), ASSASINS_BLADE_ITEM.bonusList)

// constant AXE_SPELL_ID = compiletime(ABIL_ID_GEN.next())
// @compiletime function genAbility()
//   new AbilityDefinitionPitLordCleavingAttack(AXE_SPELL_ID)
//   ..setDistributedDamageFactor(1, 0.15)

public constant AXE_ITEM = compiletime(new RecipeItem()
..setName("Axe")
..setInterfaceIcon(Icons.bTNOrcMeleeUpOne)
..setGoldCost(80)
..addBonus(Bonus.DAMAGE, 6)
..addBonus(Bonus.STRENGTH, 4)
// ..setAbilities(AXE_SPELL_ID.toRawCode())
..generateTooltip("")
)..register()
