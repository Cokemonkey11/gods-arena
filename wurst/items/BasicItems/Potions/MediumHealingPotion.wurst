package MediumHealingPotion
import ItemObjEditing
import ObjectIdGenerator
import AbilityObjEditing
import RecipeItem
import ObjectIds
import ClosureEvents
import UnitExtFuncs
import SmallHealingPotion

constant HEAL_ID = compiletime(ABIL_ID_GEN.next())
constant FLAT_HEAL = 600.
constant PERC_HEAL = 25

public constant M_HEALING_POT_ITEM = compiletime(new RecipeItem()
  ..setName("Medium Healing Potion")
  ..setInterfaceIcon("ReplaceableTextures/CommandButtons/BTNMediumHealingPotion.blp")
  ..setGoldCost(65)
  ..setNumberofCharges(1)
  ..setMaxStack(5)
  ..setActivelyUsed(true)
  ..setPerishable(true)
  ..setAbilities(HEAL_ID.toRawCode())
  ..setCooldownGroup(HEALING_COOLDOWN_GROUP_ID.toRawCode())
  ..generateTooltip("Heals "+ FLAT_HEAL.toString() +" or "+ PERC_HEAL.toString() +"% hp, which value is bigger.")
)..register()

init 
  EventListener.onCast(HEAL_ID) (unit caster) ->
    let percHeal = caster.getMaxHP() * PERC_HEAL/100
    
    if FLAT_HEAL > percHeal
      caster.addHP(FLAT_HEAL)
    else
      caster.addHP(percHeal)

@compiletime function genItemAbils()
  new AbilityDefinitionItemHealLesser(HEAL_ID)
  ..presetHitPointsGained(lvl -> 0)
  ..presetCooldown(lvl -> 15)

