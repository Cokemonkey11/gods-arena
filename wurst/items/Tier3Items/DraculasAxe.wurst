package DraculasAxe
import RecipeItem
import AbilityObjEditing
import ObjectIdGenerator
import ObjectIds
import ArcaniteAxe
import TooltipFactory
import MaskOfDeath
import ElementalStone
import MapIcons
import CustomStatSystem

constant CLEAVE_ID = compiletime(ABIL_ID_GEN.next())
constant CLEAVE_PERC = 55

constant LIFESTEAL_VALUE = 25

constant ABIL_TOOLTIP = itemAbilityTooltip(AbilityType.PASSIVE,
  "Cleave", 
  "gives " + CLEAVE_PERC.colorPerc(COLOR_GOLD) + " cleave.")

constant ABIL_TOOLTIP2 = itemAbilityTooltip(AbilityType.PASSIVE,
  "Lifesteal", 
  LIFESTEAL_VALUE.colorPerc(COLOR_GOLD) + " of damage dealt converted to hitpoints.")

public constant DRACULAS_AXE_ITEM = compiletime(new RecipeItem()
..setName("Dracula's Axe")
..setInterfaceIcon(MapIcons.bTNDraculasAxe)
..addBonus(Bonus.DAMAGE, 140)
..addBonus(Bonus.STRENGTH, 12)
..addBonus(Bonus.AGILITY, 12)
..addBonus(Bonus.INTELLIGENCE, 12)
..setAbilities(commaList(CLEAVE_ID))
..onPickup(actor -> actor.addStat(CustomUnitStats.LIFESTEAL, LIFESTEAL_VALUE/100))
..onDrop(actor -> actor.addStat(CustomUnitStats.LIFESTEAL, -LIFESTEAL_VALUE/100)) 
..generateTooltip(ABIL_TOOLTIP + "\n\n" + ABIL_TOOLTIP2)
)..register()

public constant DRACULAS_AXE_RECIPE = new ItemRecipe()
..gold(320)
..setRequiredItems(ARCANITE_AXE_ITEM.getNewId(), MASK_OF_DEATH_ITEM.getNewId(), ELEMENTAL_STONE_ITEM.getNewId())
..setResultItem(DRACULAS_AXE_ITEM)

@compiletime function genItemAbils()
  new AbilityDefinitionPitLordCleavingAttack(CLEAVE_ID)
  ..setDistributedDamageFactor(1, CLEAVE_PERC/100)
