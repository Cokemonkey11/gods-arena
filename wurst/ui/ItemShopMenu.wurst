package ItemShopMenu
import FramehandleNames
import ClosureFrames
import HashMap
import HashSet
import Hero
import PlayerData
import SoundUtils
import Items

public ItemShop itemShop

constant playerVisibleFrames = new HashMap<player, HashSet<framehandle>>

constant itemShopOpenSound = new SoundDefinition(Sounds.bigButtonClick)

public function initItemShopMenu()
  itemShop = new ItemShop()
  addItemIcons()

function framehandle.removeFocus()
  this.disable()
  this.enable()

function addItemIcons()
  itemShop
  ..addItemIcon(new ItemIcon(HEALING_POTION_ID, 50))
  ..addItemIcon(new ItemIcon(BIG_HEALING_POTION_ID, 125))
  ..addItemIcon(new ItemIcon(MANA_POTION_ID, 40))
  ..addItemIcon(new ItemIcon(BIG_MANA_POTION_ID, 90))
  ..addItemIcon(new ItemIcon(VAMPIRIC_POTION_ID, 500))
  ..addItemIcon(new ItemIcon(HEALING_WARD_ID, 500))
  ..addItemIcon(new ItemIcon(SCROLL_OF_HEALING_ID, 180))
  ..addItemIcon(new ItemIcon(SCROLL_OF_MANA_ID, 130))
  ..addItemIcon(new ItemIcon(SCROLL_OF_RESTORATION_ID, 600))
  ..addItemIcon(new ItemIcon(SCROLL_OF_PROTECTION_ID, 300))
  ..addItemIcon(new ItemIcon(SCROLL_OF_BEAST_ID, 500))
  ..addItemIcon(new ItemIcon(TOME_OF_STRENGTH_ID, 250))
  ..addItemIcon(new ItemIcon(TOME_OF_AGILITY_ID, 250))
  ..addItemIcon(new ItemIcon(TOME_OF_INTELLIGENCE_ID, 250))
  ..addItemIcon(new ItemIcon(GAUNTLETS_OF_OGRE_STRENGTH_ID, 115))
  ..addItemIcon(new ItemIcon(SLIPPERS_OF_AGILITY_ID, 100))
  ..addItemIcon(new ItemIcon(MANTLE_OF_INTELLIGENCE_ID, 90))
  ..addItemIcon(new ItemIcon(CIRCLET_OF_NOBILITY_ID, 155))
  ..addItemIcon(new ItemIcon(GLOVES_OF_HASTE_ID, 180))
  ..addItemIcon(new ItemIcon(RING_OF_PROTECTION_ID, 200))
  ..addItemIcon(new ItemIcon(RING_OF_REGENERATION_ID, 180))
  ..addItemIcon(new ItemIcon(SOBI_MASK_ID, 170))
  ..addItemIcon(new ItemIcon(PENDANT_OF_MANA_ID, 140))
  ..addItemIcon(new ItemIcon(WARSONG_BATTLE_DRUMS_ID, 600))
  ..addItemIcon(new ItemIcon(LEGION_DOOM_HORN_ID, 600))
  ..addItemIcon(new ItemIcon(KHADGARD_PIPE_OF_INSIGHT_ID, 600))


function addShopHotkeyForPlayer(player p)
  let trig = CreateTrigger()
  ..addAction() ->
    let p2 = GetTriggerPlayer()
    let currentPlayerVisibleFrames = playerVisibleFrames.get(p2)
    
    itemShopOpenSound.playForPlayer(p2)

    if currentPlayerVisibleFrames.has(itemShop.itemShopFrame)
      itemShop.itemShopFrame.hide(p2)
      currentPlayerVisibleFrames.remove(itemShop.itemShopFrame)
    else
      itemShop.itemShopFrame.show(p2)
      currentPlayerVisibleFrames.add(itemShop.itemShopFrame) 

  BlzTriggerRegisterPlayerKeyEvent(trig, p, OSKEY_G, 0, false)

class ItemShop
  private var itemIconCounter = 0

  private constant PADDING = 0.02
  private constant HORIZONTAL_SPACING = 0.03
  private constant VERTICAL_SPACING = -0.04
  private constant ITEM_ICON_INITIAL_POSITION = vec2(PADDING, -PADDING)
  private constant MAX_ICONS_PER_ROW = 7
  
  private var iconPosition = ITEM_ICON_INITIAL_POSITION

  constant itemShopFrame = createFrame("FRAME", "itemShopFrame", GAME_UI, "", 0)
  private constant itemShopBackdrop = createFrame("HeroPickMenuBackdrop", itemShopFrame, 0, 1) // Context is 1 cuz same name uses hero pick menu.
  private constant itemShopButton = createFrame("GeneralButton", GAME_UI, 0, 0)

  construct()
    itemShopFrame
    ..setSize(0.25, 0.315)
    ..setAbsPoint(FRAMEPOINT_TOP, vec2(0.68, 0.52))

    itemShopBackdrop.setAllPoints(itemShopFrame)

    itemShopButton
    ..setSize(0.09, 0.032)
    ..setAbsPoint(FRAMEPOINT_BOTTOM, vec2(0.55, 0.138))
    ..setText("Shop (G)")
    ..setScale(0.9)
    ..onClick() ->
      let p = GetTriggerPlayer()
      let currentPlayerVisibleFrames = playerVisibleFrames.get(p)

      this.itemShopButton.removeFocus()

      if currentPlayerVisibleFrames.has(itemShopFrame)
        itemShopFrame.hide(p)
        currentPlayerVisibleFrames.remove(itemShopFrame)
      else
        itemShopFrame.show(p)
        currentPlayerVisibleFrames.add(itemShopFrame) 
    
    // Hiding shop screen and button, since shop screen will be accesible through button,
    // and button will be shown after hero was selected. 
    pData.forEach() (player p, PlayerData playerData) ->
      itemShopFrame.hide(p)
      itemShopButton.hide(p)
      playerVisibleFrames.put(p, new HashSet<framehandle>)

  function addItemIcon(ItemIcon itemIcon)
    itemIconCounter++
    if itemIconCounter == 1
      skip 
    else if (itemIconCounter - 1) % MAX_ICONS_PER_ROW == 0
      iconPosition = iconPosition.add(-HORIZONTAL_SPACING * (MAX_ICONS_PER_ROW - 1), VERTICAL_SPACING)
    else
      iconPosition = iconPosition.add(HORIZONTAL_SPACING, 0)

    itemIcon.setIconPosition(iconPosition)

  function showShopButtonForPlayer(player p)
    itemShopButton.show(p)
    addShopHotkeyForPlayer(p)

class ItemIcon
  static private var globalIconContext = 0

  // Sounds
  static constant notEnoughGoldSound = new SoundDefinition(Sounds.necromancerNoGold1)
  static constant itemBoughtSound = new SoundDefinition(Sounds.pickUpItem)
  static constant cantBuyItemSound = new SoundDefinition(Sounds.error)

  private var itemId = 0
  private var itemCost = 0
  private var iconContext = 0

  private framehandle itemIconButton = null
  private framehandle itemIcon = null
  private framehandle itemText = null

  construct(int itemId, int itemCost)
    this.itemId = itemId
    this.itemCost = itemCost
    this.iconContext = globalIconContext
    globalIconContext++

    itemIconButton = createFrame(FramehandleTypeNames.gluebutton, "ItemIconButton", itemShop.itemShopFrame, FramehandleNames.iconButtonTemplate, iconContext)
    itemIcon = createFrame(FramehandleTypeNames.backdrop, "itemIcon", itemIconButton, "", iconContext)
    itemText = createFrame(FramehandleTypeNames.text, "itemText", itemIconButton, "", iconContext)
  
    itemIconButton
      ..setSize(0.025, 0.025)
      ..onClick() -> 
      let p = GetTriggerPlayer()
      let hero = p.getData().getHero().actor

      itemIconButton.removeFocus()
      
      if hero.isAlive()
        if p.getGold() >= itemCost
          p.setGold(p.getGold() - itemCost)
          p.getData().getHero().actor.addItemById(itemId)
          itemBoughtSound.playForPlayer(p)
        else 
          notEnoughGoldSound.playForPlayer(p)
      else
        cantBuyItemSound.playForPlayer(p)

    let tempItem = createItem(itemId, vec2(0, 0))
    let iconPath = tempItem.getIconPath()
    tempItem.remove()    

    itemIcon
      ..setAllPoints(itemIconButton)
      ..setTexture(iconPath, 0, true)

    itemText
      ..setText(itemCost.toString())
      ..setTextColor(colorA(255, 215, 0, 1))
      ..setPoint(FRAMEPOINT_TOPLEFT, itemIconButton, FRAMEPOINT_BOTTOMLEFT, vec2(0, -0.001))

    createTooltip()

  private function createTooltip()
    let tooltip = createFrame("BoxedText", itemIconButton, 0, iconContext)
    itemIconButton.setTooltip(tooltip)

    tooltip..setSize(0.28, 0.08)
      ..setPoint(FRAMEPOINT_RIGHT, itemIconButton, FRAMEPOINT_LEFT)

    let tempItem = createItem(itemId, vec2(0, 0))
    
    getFrame("BoxedTextTitle", iconContext).setText(tempItem.getTooltip())
    getFrame("BoxedTextValue", iconContext).setText(tempItem.getExtendedTooltip())

    tempItem.remove()

  function setIconPosition(vec2 iconPosition)
    itemIconButton.setPoint(FRAMEPOINT_TOPLEFT, itemShop.itemShopFrame, FRAMEPOINT_TOPLEFT, iconPosition)
