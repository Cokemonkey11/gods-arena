package GameInit
import GameConstants
import EntityManagement
import PlayerData
import ItemShopUI
import HeroPickMenu
import Arenas
import ClosureTimers
import DamageEvent
// import GameStatistic
import GeneralFunctions
import SaveLoadSystem
import CustomStatSystem

constant arena1Rect = Rect(-2272, -1760, 2560, 1760)

function initFrames()
  let loadingResult = BlzLoadTOCFile("MyFiles.toc")
  if loadingResult == false
    print("SOMETHING WENT WRONG WITH MyFiles.toc")

function initPlayersGold()
  pData.forEach() (player p, PlayerData playerData) ->
    p.setGold(185)

function initVision()
  SetPlayerHandicap(ENEMY_PLAYER, 0.15 + 0.85 * (pData.size() / 8.))
  createVision(ENEMY_PLAYER, playableMapRect, true).start()

function initPickTimer()
  let heroPickTimer = getTimer()
  let heroPickTimerDialog = heroPickTimer.createTimerDialog()
  heroPickTimerDialog
    ..setTitle("Hero pick phase ends in:")
    ..display(true)

  heroPickTimer.doAfter(HERO_PICK_TIME) ->
    heroPickTimerDialog.destr()
    startArenas()

function initChatCommands()
  EventListener.add(EVENT_PLAYER_CHAT_FILTER) () ->
    let message = EventData.getChatMessage()
    let p = EventData.getTriggerPlayer()
    let isCreator = p.getName() == "Overkane" or p.getName() == "Frotty" or p.getName() == "Local Player" or p.getName() == "Игрок"

    // Cheat commands
    if isCreator
      // Refresh command
      if message == "-r"
        pData.get(p).getHero().ifPresent(h -> h.actor.setMana(h.actor.getMaxMana()))
        pData.get(p).getHero().ifPresent(h -> h.actor.setHP(h.actor.getMaxHP()))
        pData.get(p).getHero().ifPresent(h -> h.actor.resetCooldown())
      // Damage debug command
      else if message == "-d"
        DamageEvent.addListener() ->
          if DamageEvent.getSource().isAllyOf(players[0])
            print(DamageEvent.getSource().getName() + " dealt " + DamageEvent.getAmount().toString() + " damage to " + DamageEvent.getTarget().getName())
            print("id " + DamageEvent.getId().toString() + "; element " + DamageEvent.getElement().getName() + ".")
            print("OrigAm " + DamageEvent.getOriginalAmount().toString() + "; UnredAm" + DamageEvent.getUnreducedAmount().toString())
      else if message.startsWith("-gold ")
        let goldAmount = message.ltrim("-gold ").toInt()
        p.addGold(goldAmount)
      else if message.startsWith("-hp ")
        let honorPointsAmount = message.ltrim("-hp ").toInt()
        p.addLumber(honorPointsAmount)
      else if message.startsWith("-lvl ")
        let heroLevel = message.ltrim("-lvl ").toInt()
        pData.get(p).getHero().ifPresent(h -> h.actor.setLevel(heroLevel, false))

    // Host commands
    if p == players[0]
      if message.startsWith("-kick ")
        let playerNumber = message.charAt(6).toInt()
        let kickedPlayer = players[playerNumber - 1]

        if kickedPlayer.isIngame() and kickedPlayer != ENEMY_PLAYER
          kickedPlayer.defeat("You was kicked.")

    // General commands
    if message.startsWith("-z ")
      let zoomValue = message.ltrim("-z ").toReal()
      p.setCameraField(CAMERA_FIELD_TARGET_DISTANCE, zoomValue, 0.3)
    else if message == "-stats"
      pData.get(p).getHero().ifPresent() (h) ->
        printTimedToPlayer("Bonus Attack Damage: " + h.actor.getStat(CustomUnitStats.BONUS_ATTACK_DAMAGE).toString(), 5, p)
      pData.get(p).getHero().ifPresent() (h) ->
        printTimedToPlayer("Attack Power: " + h.actor.getStat(CustomUnitStats.ATTACK_POWER).toString(), 5, p)
      pData.get(p).getHero().ifPresent() (h) ->
        printTimedToPlayer("Attack Crit Power: " + h.actor.getStat(CustomUnitStats.ATTACK_CRIT_POWER).toString(), 5, p)
      pData.get(p).getHero().ifPresent() (h) ->
        printTimedToPlayer("Attack Crit Chance: " + h.actor.getStat(CustomUnitStats.ATTACK_CRIT_CHANCE).toString(), 5, p)
      pData.get(p).getHero().ifPresent() (h) ->
        printTimedToPlayer("Lifesteal: " + h.actor.getStat(CustomUnitStats.LIFESTEAL).toString(), 5, p)
      pData.get(p).getHero().ifPresent() (h) ->
        printTimedToPlayer("Bonus Spell Damage: " + h.actor.getStat(CustomUnitStats.BONUS_SPELL_DAMAGE).toString(), 5, p)
      pData.get(p).getHero().ifPresent() (h) ->
        printTimedToPlayer("Spell Power: " + h.actor.getStat(CustomUnitStats.SPELL_POWER).toString(), 5, p)
      pData.get(p).getHero().ifPresent() (h) ->
        printTimedToPlayer("Spell Crit Power: " + h.actor.getStat(CustomUnitStats.SPELL_CRIT_POWER).toString(), 5, p)
      pData.get(p).getHero().ifPresent() (h) ->
        printTimedToPlayer("Spell Crit Chance: " + h.actor.getStat(CustomUnitStats.SPELL_CRIT_CHANCE).toString(), 5, p)
      pData.get(p).getHero().ifPresent() (h) ->
        printTimedToPlayer("Spell Lifesteal: " + h.actor.getStat(CustomUnitStats.SPELL_LIFESTEAL).toString(), 5, p)
      pData.get(p).getHero().ifPresent() (h) ->
        printTimedToPlayer("Evasion: " + h.actor.getStat(CustomUnitStats.EVASION).toString(), 5, p)

init
  nullTimer() ->
    initFrames()
    initPlayers()
    initPlayersGold()
    initVision()
    initPickTimer()
    initHeroPickMenu()
    initItemShop()
    initChatCommands()
    startEntityLoop()
    initSaveLoadSystem()
    // initMultiboard()
    doAfter(1) ->
      BlzChangeMinimapTerrainTex("originalMap.blp")