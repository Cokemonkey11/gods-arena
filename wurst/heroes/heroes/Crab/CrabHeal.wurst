package CrabHeal
import ClosureEvents
import Assets
import ClosureForGroups
import AbilityTooltipGenerator
import GameConstants
import CrabDefense
import Reference
import CustomHeal

public constant CRAB_HEAL_ID = compiletime(ABIL_ID_GEN.next())

constant IntLevelClosure SPELL_REGEN = lvl -> 15 + 15 * lvl

init
    EventListener.onCast(CRAB_HEAL_ID) caster ->
        let lvl = caster.getAbilityLevel(CRAB_HEAL_ID)
        let owner = caster.getOwner()
        flashEffect(Abilities.purificationTarget, caster.getPos())
        var count = new Reference<int>(0)
        forUnitsOfPlayer(owner) (unit u) ->
            if u.getTypeId() == CRABLING_ID
                flashEffect(Abilities.waterElementalMissile, u.getPos())
                u.kill()
                count.val++

        let heal = count.into() * SPELL_REGEN.run(lvl)
        caster.healTarget(caster, heal.toReal())


@compiletime
function genAbility()
    new ChannelAbilityPreset(CRAB_HEAL_ID, NORMAL_SPELL_LEVELS, true, 
        new AbilityTooltipGenerator("The crab consumes all of its alive |cffce951acrablings|r to gain health."))
    ..presetButtonPosNormal(1, 2)
    ..presetButtonPosResearch(1, 0)
    ..presetIcon(Icons.bTNCoralBed)

    ..tooltipStartListen()
    ..presetTargetTypes(Targettype.NONE)
    ..setName("Crab Heal")
    ..presetHotkey("W")
    ..addTooltipProperty("HP per crab", SPELL_REGEN)
    ..presetManaCost(lvl -> 20 + lvl * 10)
    ..presetCooldown(lvl -> 15. - lvl)

    ..tooltipStopListen()
