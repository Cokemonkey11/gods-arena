package KillerReflexes
import AbilityTooltipGenerator
import Icons
import GameConstants
import ClosureEvents
import CustomStatSystem
import PassiveAbilityPreset
import TooltipFactory

public constant KILLER_REFLEXES_ID = compiletime(ABIL_ID_GEN.next())

RealLevelClosure EVASION = lvl -> 20. + 5 * (lvl-1)
constant ACTIVE_BONUS = 2.

init
  EventListener.add(EVENT_PLAYER_HERO_SKILL) ->
    let u = EventData.getTriggerUnit()

    if EventData.getLearnedSkill() == KILLER_REFLEXES_ID
      let lvl = u.getAbilityLevel(KILLER_REFLEXES_ID)
      if lvl != 1
        let evasionOld = EVASION.run(lvl-1)
        u.addStat(CustomUnitStats.EVASION, -evasionOld/100)
      
      let evasion = EVASION.run(lvl)
      u.addStat(CustomUnitStats.EVASION, evasion/100)

@compiletime function genAbility()
  let tooltip = new AbilityTooltipGenerator(Targettype.PASSIVE, "Hero gets chance to evade an attack.")
  new PassiveAbilityPreset(KILLER_REFLEXES_ID, NORMAL_SPELL_LEVELS, tooltip)
  ..registerTooltipGenerator(tooltip)
  ..presetIcon(Icons.pASBTNEvasion)
  ..presetButtonPosNormal(2, 2)
  ..presetButtonPosResearch(2, 0)
  ..presetHotkey("E")
  
  ..tooltipStartListen()
  ..setName("Killer Reflexes")
  ..addTooltipProperty("Evasion", lvl -> EVASION.run(lvl).percRound())
  ..tooltipStopListen()
