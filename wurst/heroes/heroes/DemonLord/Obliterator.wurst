package Obliterator

import AbilityTooltipGenerator
import Abilities
import ClosureForGroups
import CreepAggro
import DemonLordIds
import Icons
import PassiveAbilityPreset
import PermanentBuff

constant effect_description = "grants bonus agility and nearby creep aggro"
constant buffTupleBuff = compiletime(
  createDummyBuffObject("Obliterator", effect_description, Icons.bTNFireRocks, Abilities.vampiricAura)
)

constant IntLevelClosure BONUS_AGILITY = _ -> 50
constant RealLevelClosure CREEP_AGGRO = _ -> 600.
constant RealLevelClosure CREEP_AGGRO_RANGE = _ -> 400.
constant RealLevelClosure BONUS_HEALTH_THRESHOLD = _ -> .35


public class ObliteratorBuff extends PermanentBuff
  unit owner

  construct(unit owner)
    super(buffTupleBuff)
    this.owner = owner

  override function update()
    super.update()
    if (this.owner.getHP() / this.owner.getMaxHP()) > BONUS_HEALTH_THRESHOLD.run(1) or not this.owner.isAlive()
      terminate()
    if not done
      forUnitsInRange(this.owner.getPos(), CREEP_AGGRO_RANGE.run(1)) fog ->
        if fog.isEnemyOf(this.owner)
          this.owner.maxAggro(fog, CREEP_AGGRO.run(1))

  override function onApply()
    this.owner.addAgi(BONUS_AGILITY.run(1))

  override function onEnd()
    this.owner.addAgi(-BONUS_AGILITY.run(1))


init
  DamageEvent.addListener(5) ->
    let target = DamageEvent.getTarget()
    if target.getTypeId() == DEMON_LORD_ID and (target.getHP() / target.getMaxHP()) < BONUS_HEALTH_THRESHOLD.run(1)
      new ObliteratorBuff(target).apply(target)


@compiletime function genAbility()
  let tooltip = new AbilityTooltipGenerator(
    Targettype.PASSIVE,
    "Passively " + effect_description + " when the Demon Lord has low HP."
  )
  new PassiveAbilityPreset(OBLITERATOR_ID, 1, tooltip)
  ..presetTargetsAllowed(_ -> "none")
  ..presetButtonPosNormal(1, 1)
  ..presetButtonPosResearch(1, 0)
  ..setIconNormal(Icons.pASBTNFireRocks)
  ..tooltipStartListen()
  ..addTooltipProperty("Bonus Agility", BONUS_AGILITY)
  ..addTooltipProperty("Creep Aggro", CREEP_AGGRO)
  ..addTooltipProperty("Creep Aggro Range", CREEP_AGGRO_RANGE)
  ..addTooltipProperty("Health Threshold", BONUS_HEALTH_THRESHOLD)
  ..setName("Obliterator")
  ..tooltipStopListen()
