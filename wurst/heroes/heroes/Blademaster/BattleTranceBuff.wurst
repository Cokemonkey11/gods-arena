package BattleTranceBuff
import PresetBuffs
import Assets
import SoundUtils
import BonusHandler

constant buffTuple1 = compiletime(createDummyBuffObject("Battle Trance Buff", "Hero has increased attackspeed.",  Icons.bTNMirrorImage))
constant buffTuple2 = compiletime(createDummyBuffObject("Battle Trance Debuff", "Hero has decreased attackspeed.",  Icons.bTNMirrorImage))

public class BattleTranceBuff extends NormalBuff
  constant ON_APPLY_SOUND = new SoundDefinition(Sounds.bloodlustTarget)
  constant bonusAS = 0.

  construct(real dur, real bonusAS)
    super(dur, buffTuple1)
    this.bonusAS = bonusAS
    this.duration = dur
    
  override function onApply()
    ON_APPLY_SOUND.play()  
    target.addBonus(Bonus.ATTACKSPEED, bonusAS)

  override function onEnd()
    target.addBonus(Bonus.ATTACKSPEED, -bonusAS)
    new BattleTranceBuff(duration / 2, bonusAS).apply(target)

public class BattleTranceDebuff extends NormalBuff
  constant bonusAS = 0.

  construct(real dur, real bonusAS)
    super(dur, buffTuple2)
    this.bonusAS = bonusAS

  override function onApply()
    target.addBonus(Bonus.ATTACKSPEED, -bonusAS)

  override function onEnd()
    target.addBonus(Bonus.ATTACKSPEED, bonusAS)
