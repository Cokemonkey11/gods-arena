package Tagwalk
import AbilityTooltipGenerator
import Icons
import PresetBuffs
import Abilities
import AttachmentPoints
import ClosureEvents
import HeroSpellConstants

public constant TAGWALK_ID = compiletime(ABIL_ID_GEN.next())

constant RealLevelClosure WALK_DURATION = lvl -> 5. + 1. * lvl

public constant tagBuffObj = compiletime(createDummyBuffObject("Tagged", "This unit has been tagged.", Icons.bTNTheBlackArrow, Abilities.parasiteTarget, AttachmentPoints.overhead))
constant stabBuffObj = compiletime(createDummyBuffObject("|cff1cd134Tag Walk", "Increases speed and reduces damage taken. Touched enemies are tagged.", Icons.bTNTheBlackArrow))

class TagBuff extends NormalBuff

    construct(real duration)
        super(duration, tagBuffObj)

class TagwalkBuff extends NormalBuff
    let trig = CreateTrigger()
    effect windEff = null

    construct(real duration)
        super(duration, stabBuffObj)

    override function apply(unit target)
        super.apply(target)
        target
        ..setMoveSpeed(target.getMoveSpeed() + 200.)
        windEff = target.addEffect(Abilities.tornadoElementalSmall, AttachmentPoints.chest)..setScale(0.25)
        trig..registerUnitInRangeSource(target, 72., null)
        ..addAction() ->
            let inRange = GetTriggerUnit()
            let source = GetTriggeringTrigger().getSource()
            if inRange.isEnemyOf(source.getOwner())
                new TagBuff(15.)
                ..apply(inRange)
        

    override function defenseModifier()
        DamageEvent.setAmount(DamageEvent.getAmount() * 0.25)

    override function onEnd()
        super.onEnd()
        target.setMoveSpeed(target.getMoveSpeed() - 200.)
        windEff.destr()
        target.clearRegister()
        trig.destr()


init
    EventListener.onCast(TAGWALK_ID) caster ->
        let lvl = caster.getAbilityLevel(TAGWALK_ID)

        new TagwalkBuff(WALK_DURATION.run(lvl))
        ..apply(caster)


@compiletime function genAbility()
    let tooltip = new AbilityTooltipGenerator("Reduces incoming damage and boosts speed. Enemies touched during the effect are tagged.")
    new AbilityDefinitionBladeMasterWindWalk(TAGWALK_ID)
    ..registerTooltipGenerator(tooltip)
    ..presetButtonPosNormal(1, 2)
    ..presetButtonPosResearch(1, 0)
    ..presetIcon(Icons.bTNTheBlackArrow)
    ..presetDurationHero(WALK_DURATION)

    ..tooltipStartListen()
    ..setLevels(NORMAL_SPELL_LEVELS)
    ..presetHotkey("W")
    ..setName("Tag Walk")
    ..addTooltipProperty("Walk Duration", WALK_DURATION)
    ..addTooltipProperty("Damage Reduction", lvl -> 0.75)
        
    ..presetManaCost(lvl -> 50 - 10 * lvl)
    ..presetCooldown(lvl -> 21. - 1. * lvl)
    ..tooltipStopListen()