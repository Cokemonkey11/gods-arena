package CriticalArrow
import AbilityTooltipGenerator
import Icons
import StandardTextTags
import Tagwalk
import InstantDummyCaster
import Orders
import Buff
import HeroSpellConstants

public constant CRIT_ARROW_ID = compiletime(ABIL_ID_GEN.next())

constant ENTANGLE_ID = compiletime(ABIL_ID_GEN.next())
constant RealLevelClosure DAMAGE = lvl -> 25. + 15 * lvl
constant IntLevelClosure CHANCE = lvl -> 10 + 10 * lvl

init
    DamageEvent.addListener() -> 
        let attacker = DamageEvent.getSource()
        let lvl = attacker.getAbilityLevel(CRIT_ARROW_ID)
        let isTagged = DamageEvent.getTarget().hasBuff(TagBuff.typeId)
        if DamageEvent.getType() == DamageType.ATTACK and lvl > 0 and (isTagged or GetRandomReal(0, 1) < CHANCE.run(lvl))
            let damage = DAMAGE.run(lvl)
            DamageEvent.addAmount(damage)
            createCriticalStrikeTextTag(attacker, damage.toInt())

            if isTagged
                InstantDummyCaster.castTarget(attacker.getOwner(), ENTANGLE_ID, lvl, OrderIds.entanglingroots, DamageEvent.getTarget())
                DamageEvent.getTarget().removeBuff(TagBuff.typeId)



@compiletime function genAbility()
    let tooltip = new AbilityTooltipGenerator("Has a chance to deal extra damage.\nIf the target is |cffd803bctagged|r, it will always crit and also become entangled.")
    new ChannelAbilityPreset(CRIT_ARROW_ID, NORMAL_SPELL_LEVELS, true, tooltip)
    ..presetButtonPosNormal(2, 2)
    ..presetButtonPosResearch(2, 0)
    ..presetIcon(Icons.pASBTNCriticalStrike)

    ..tooltipStartListen()
    ..presetTargetTypes(Targettype.PASSIVE)
    ..addTooltipProperty("Extra Damage", DAMAGE)
    ..addTooltipProperty("Chance",  lvl -> CHANCE.run(lvl).toString() + "%")
    ..presetHotkey("E")
    ..setName("Critical Arrow")
    ..tooltipStopListen()

    new AbilityDefinitionEntanglingRootscreep(ENTANGLE_ID)
    ..setDummyAbility()
    ..setLevels(5)
    ..presetDamageperSecond(lvl -> 10 + 15. * lvl)
    ..presetDurationHero(lvl -> 10.)
    ..presetDurationNormal(lvl -> 10.)
        