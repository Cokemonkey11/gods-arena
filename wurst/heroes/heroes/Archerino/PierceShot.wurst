package PierceShot
import Assets
import Projectile
import Knockback3
import AbilityTooltipGenerator
import Tagwalk
import Orders
import BonusHandler
import HeroSpellConstants
import Buff

public constant PIERCESHOT_ID = compiletime(ABIL_ID_GEN.next())

constant TREANT_ID = compiletime(UNIT_ID_GEN.next())

constant RealLevelClosure SPELL_DAMAGE = lvl -> 75. + 55 * lvl

class TreantEntity extends UnitEntity

    construct(player owner, unit target, int lvl)
        super(createUnit(owner, TREANT_ID, target.getPos(), angle(0))
        ..setTimedLife(12.)
        ..issueTargetOrderById(OrderIds.attack, target)
        ..addBonus(Bonus.DAMAGE, lvl * 20.)
        ..addBonus(Bonus.LIFE, 75. * lvl))


init
    EventListener.onPointCast(PIERCESHOT_ID) (caster, target) ->
        let casterEntity = caster.getEntity()
        let projectile = new Projectile(casterEntity.getPos(), 86, caster.getOwner(), casterEntity.getPos().angleTo2d(target), Abilities.ballistaMissile)
        let lvl = caster.getAbilityLevel(PIERCESHOT_ID)
        projectile
            ..setRanged(1200)
            ..setAcc(0.997)
            ..setTarget(target.withTerrainZ(), 50.)

        projectile.onHit() hitTarget ->
            if hitTarget.getOwner().isEnemyOf(caster.getOwner())
                flashEffect(Abilities.ballistaImpact, hitTarget.getPos())
                DamageEvent.setNextDamageFromCode()
                caster.damageTarget(hitTarget, SPELL_DAMAGE.run(lvl))
                Knockback3.add(hitTarget, 450., projectile.getXYAngle(), 45 .fromDeg())

                if hitTarget.hasAbility(tagBuffObj.buffId)
                    new TreantEntity(projectile.owner, hitTarget, lvl)
                    hitTarget.removeBuff(TagBuff.typeId)


@compiletime function genAbility()
    let tooltip = new AbilityTooltipGenerator("Shoots an arrow towards the target position, damaging enemies in its path. If hit enemies are currently |cffd803bctagged|r, they become wounded.")
    new ChannelAbilityPreset(PIERCESHOT_ID, NORMAL_SPELL_LEVELS, true, tooltip)
    ..presetButtonPosNormal(0, 2)
    ..presetButtonPosResearch(0, 0)
    ..presetIcon(Icons.bTNGlaiveThrower)

    ..tooltipStartListen()
    ..presetTargetTypes(Targettype.POINT)
    ..presetHotkey("Q")
    ..setName("Piercing Shot")
    ..addTooltipProperty("Damage", SPELL_DAMAGE)
    ..presetManaCost(lvl -> 50 - 10 * lvl)
    ..presetCastRange(lvl -> 1000)
    ..presetCooldown(lvl -> 16)
    ..tooltipStopListen()

    new UnitDefinition(TREANT_ID, UnitIds.forceofnature)
    ..setHitPointsMaximumBase(150)
    ..setAttack1DamageBase(15)