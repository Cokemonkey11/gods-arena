package HeroSelector
import public Selector
import ClosureTimers
import LinkedList
import Heroes
import Hero
import GameProperties
import Icons
  
public constant heroSelectorList = new LinkedList<Selector>
constant heroPickRect = Rect(-288, -416, 288, 64)

@compiletime public function heroSelector() returns SelectorBuilder
  return new SelectorBuilder()
    ..btn("Paladin")
    ..tooltip("Very cool dude")
    ..pos(0, 0)
    ..icon(Icons.bTNHeroPaladin)
    ..onClick((selector) -> pickHero(selector, PALADIN_ID))
    ..btn("Assasin")
    ..tooltip("Very cool dude")
    ..pos(1, 0)
    ..icon(Icons.bTNHeroWarden)
    ..onClick((selector) -> pickHero(selector, ASSASIN_ID))
    ..btn("Archmage")
    ..tooltip("Very cool dude")
    ..pos(2, 0)
    ..icon(Icons.bTNHeroArchMage)
    ..onClick((selector) -> pickHero(selector, ARCHMAGE_ID))
    ..build()

function pickHero(Selector selector, int heroId)
  let h = new Hero(selector.owner, heroId, heroPickRect.randomPoint().toVec3(), angle(0))
  HEROES.add(h)
  selector.owner.select(h.actor)
  heroSelectorList.remove(selector)
  destroy selector

function initHeroSelectors()
  let heroSelector = heroSelector()
  for p in PLAYERS
    let selector = heroSelector.display(p, heroPickRect.getCenter())
    heroSelectorList.add(selector)

init
  nullTimer() -> 
    initHeroSelectors()