package MeteorSpell
import ClosureEvents
import Assets
import ClosureTimers
import ClosureForGroups
import Knockback3
import AbilityTooltipGenerator
import GameConstants

public constant METEOR_ABIL_ID = compiletime(ABIL_ID_GEN.next())
constant RealLevelClosure SPELL_DMG = lvl -> 75. + 50. * lvl
constant SPELL_AOE = 378.

init
    EventListener.onPointCast(METEOR_ABIL_ID) (caster, spellTarget) ->
        let lvl = caster.getAbilityLevel(METEOR_ABIL_ID)
        flashEffect(Units.infernalBirth, spellTarget)
        doAfter(0.9) ->
            forUnitsInRange(spellTarget, SPELL_AOE) (target) ->
                if target.isEnemyOf(caster.getOwner()) and target.isAlive()
                    let knockBackDistance = 1 - target.getPos().distanceTo(spellTarget) / SPELL_AOE
                    caster.damageTarget(target, SPELL_DMG.run(lvl))
                    Knockback3.add(target, 1200 * knockBackDistance, spellTarget.angleTo(target.getPos()), (78).fromDeg())
                    flashEffect(Abilities.incinerateBuff, target, "origin")

@compiletime
function genAbility()
    new ChannelAbilityPreset(METEOR_ABIL_ID, NORMAL_SPELL_LEVELS, true, new AbilityTooltipGenerator("A chunky meteor from the sky which crushes your enmies in a big area with over 9000Â° Celsius."))
    ..presetButtonPosNormal(0, 2)
    ..presetIcon(Icons.bTNInfernal)
    ..presetOption(Option.TARGETIMAGE, true)

    ..tooltipStartListen()
    ..presetTargetTypes(Targettype.POINT)
    ..setName("Chaos Meteor")
    ..presetHotkey("Q")
    ..addTooltipProperty("Damage", SPELL_DMG)
    ..presetManaCost(lvl -> 160 + lvl * 20)
    ..presetAreaofEffect(lvl -> SPELL_AOE)
    ..presetCooldown(lvl -> 32. - lvl * 2)
    ..tooltipStopListen()
