package SpaceJump
import AbilityTooltipGenerator
import Icons
import ClosureEvents
import Abilities
import ClosureTimers
import Knockback3

public constant SPACE_JUMP_ABIL_ID = compiletime(ABIL_ID_GEN.next())
constant DUMMY_ABIL_ID = compiletime(ABIL_ID_GEN.next())
constant RealLevelClosure SPELL_DMG = lvl -> 0.05 * lvl
constant RealLevelClosure SPELL_CAST_RANGE = lvl -> 700. + 100 * lvl
constant SPELL_CD = 15.
constant SPELL_COST = 40

init
    EventListener.onPointCast(SPACE_JUMP_ABIL_ID) (caster, spellTarget) ->
        let distanceToCastPoint = caster.getPos().distanceTo(spellTarget)
        let rendering = distanceToCastPoint / 100

        for i = 1 to rendering.toInt()
            let pos = caster.getPos().polarOffset(caster.getPos().angleTo(spellTarget), distanceToCastPoint / rendering.toInt() * i)
            if i == rendering.toInt()
                flashEffect(Abilities.tornado, pos, 1)
            else
                flashEffect(Abilities.tornado, pos, 0.5)

        doAfter(0.2) ->
            caster.setPos(spellTarget)
            Knockback3.add(caster, 1000 , (0).fromDeg(), (0).fromDeg())





@compiletime
function genAbil()
    new ChannelAbilityPreset(SPACE_JUMP_ABIL_ID, 3, true, new AbilityTooltipGenerator("The Manipulator leaps through time. Actually it's just a blink."))
    ..presetButtonPosNormal(2, 1)
    ..presetIcon(Icons.bTNTornado)
    ..presetCastRange(lvl -> 700)

    ..tooltipStartListen()
    ..presetTargetTypes(Targettype.POINT)
    ..setName("Space Jump")
    ..presetHotkey("F")
    ..addTooltipProperty("Damage", SPELL_DMG)
    ..presetCastRange(SPELL_CAST_RANGE)
    ..presetManaCost(lvl -> SPELL_COST + lvl * 10)
    ..presetCooldown(lvl -> SPELL_CD)
    ..tooltipStopListen()

    new AbilityDefinitionSlow(DUMMY_ABIL_ID)
    ..setDummyAbility()
    ..setLevels(3)
    ..presetMovementSpeedFactor(lvl -> 9000)
    ..presetAttackSpeedFactor(lvl -> 500)
    ..presetDurationNormal(lvl -> 1)
